function[] = subjectLevelERP(erpProcessList, location_path, save_path, ...
    save1, createIpsiContra, rmBaseline, lowPass, save2, plotERP, ...
    plots_data_path, plotSingleTrials, electSingleTrials)


for s = 1:length(erpProcessList)
    
    % Load set
    EEG = pop_loadset([erpProcessList{s} '_Binned_ar.set'], location_path);
    
    % average without rejected trials
    ERP = pop_averager( EEG , 'Criterion', 'good', 'ExcludeBoundary', 'on', 'SEM', 'off' );
    
    if (save1)
        % save erp as file
        ERP = pop_savemyerp(ERP, 'erpname', '1', 'filename',...
            [save_path  erpProcessList{s}, '_erp.erp'], 'Warning', 'off');
    end
    
    suffix = '_';
    
    if (createIpsiContra)
        
        % BIN OPS - create ipsi/contra bins
        ERP = pop_binoperator( ERP, {  'prepareContraIpsi',...
            'Lch = [ 1:2:25 26:32]',  'Rch = [ 2:2:24 25:32]',  ...
            'nbin1 = 0.5*bin1@Rch + 0.5*bin2@Lch label NEUTRAL_TARGET_LAT Contra',...
            'nbin2 = 0.5*bin1@Lch + 0.5*bin2@Rch label NEUTRAL_TARGET_LAT Ipsi',...
            'nbin3 = 0.5*bin3@Rch + 0.5*bin4@Lch label NEUTRAL_DISTR_LAT Contra',...
            'nbin4 = 0.5*bin3@Lch + 0.5*bin4@Rch label NEUTRAL_DISTR_LAT Ipsi',...
            'nbin5 = 0.5*bin5@Rch + 0.5*bin6@Lch label POSITIVE_TARGET_LAT Contra',...
            'nbin6 = 0.5*bin5@Lch + 0.5*bin6@Rch label POSITIVE_TARGET_LAT Ipsi',...
            'nbin7 = 0.5*bin7@Rch + 0.5*bin8@Lch label POSITIVE_DISTR_LAT Contra',...
            'nbin8 = 0.5*bin7@Lch + 0.5*bin8@Rch label POSITIVE_DISTR_LAT Ipsi',...
            'nbin9 = 0.5*bin9@Rch + 0.5*bin10@Lch label NEGATIVE_TARGET_LAT Contra',...
            'nbin10 = 0.5*bin9@Lch + 0.5*bin10@Rch label NEGATIVE_TARGET_LAT Ipsi',...
            'nbin11 = 0.5*bin11@Rch + 0.5*bin12@Lch label NEGATIVE_DISTR_LAT Contra',...
            'nbin12 = 0.5*bin11@Lch + 0.5*bin12@Rch label NEGATIVE_DISTR_LAT Ipsi',...
            });
        
        % BIN OPS - create ipsi-contra bins
        ERP = pop_binoperator( ERP, {  ...
            'nbin1 = bin1 label NEUTRAL_TARGET_LAT Contra',...
            'nbin2 = bin2 label NEUTRAL_TARGET_LAT Ipsi',...
            'nbin3 = bin3 label NEUTRAL_DISTR_LAT Contra',...
            'nbin4 = bin4 label NEUTRAL_DISTR_LAT Ipsi',...
            'nbin5 = bin5 label POSITIVE_TARGET_LAT Contra',...
            'nbin6 = bin6 label POSITIVE_TARGET_LAT Ipsi',...
            'nbin7 = bin7 label POSITIVE_DISTR_LAT Contra',...
            'nbin8 = bin8 label POSITIVE_DISTR_LAT Ipsi',...
            'nbin9 = bin9 label NEGATIVE_TARGET_LAT Contra',...
            'nbin10 = bin10 label NEGATIVE_TARGET_LAT Ipsi',...
            'nbin11 = bin11 label NEGATIVE_DISTR_LAT Contra', ...
            'nbin12 = bin12 label NEGATIVE_DISTR_LAT Ipsi', ...
            'nbin13 = bin1 - bin2 label NEUTRAL_TARGET_LAT Contra-Ipsi',...
            'nbin14 = bin3 - bin4 label NEUTRAL_DISTR_LAT Contra-Ipsi',...
            'nbin15 = bin5 - bin6 label POSITIVE_TARGET_LAT Contra-Ipsi',...
            'nbin16 = bin7 - bin8 label POSITIVE_DISTR_LAT Contra-Ipsi',...
            'nbin17 = bin9 - bin10 label NEGATIVE_TARGET_LAT Contra-Ipsi',...
            'nbin18 = bin11 - bin12 label NEGATIVE_DISTR_LAT Contra-Ipsi'});
        
        suffix = [suffix 'ChanOps'];
    end
    
    if (rmBaseline)
        % Remove ERP baseline
        ERP = pop_blcerp( ERP , 'Baseline', 'pre', 'Saveas', 'off' );
        
        suffix = [suffix '_rmBs'];
        
    end
    
    if (lowPass)
        
        % 60Hz low pass filter for the ERP
        ERP = pop_filterp( ERP,  1:32 , 'Cutoff',  60, 'Design',...
            'butter', 'Filter', 'lowpass', 'Order',  2 );
        
        suffix = [suffix '_lpFilt'];
        
    end
    
    if (save2)
        % Save the ERP
        ERP = pop_savemyerp(ERP,...
            'erpname', [erpProcessList{s} '_filter_binOps'], ...
            'filename', [save_path  erpProcessList{s} suffix '.erp'],...
            'Warning', 'off');
        
    end
    
    if (plotERP)
        
        Bins2Plot = {[1 2], [3 4], [5 6], [7 8], [9 10], [11 12]};
        
        Names2Plot = {...
            'NEUTRAL_TARGET_LAT',...
            'NEUTRAL_DISTR_LAT',...
            'POSITIVE_TARGET_LAT',...
            'POSITIVE_DISTR_LAT',...
            'NEGATIVE_TARGET_LAT',...
            'NEGATIVE_DISTR_LAT '};
        
        for n = 1:length(Bins2Plot)
            ERP.erpname = [erpProcessList{s} '_' Names2Plot{n}];
            plotMyERP(ERP, Bins2Plot{n}, false, true, plots_data_path);
            ERP.erpname = 'meanERP';
        end
        
    end
    
    if (plotSingleTrials)
        % Plot Channel ERp for all trials
        % Sorted in order of occurence.
        
        chId = 5;
        figureTitle = 'Tmp Title';
        figure;
        erpimage( mean(EEG.data([chId], :),1),...
            ones(1, EEG.trials)*EEG.xmax*1000,...
            linspace(EEG.xmin*1000, EEG.xmax*1000, EEG.pnts),...
            figureTitle, 10, 1 ,'yerplabel','\muV','erp','on',...
            'limits',[-100 500 NaN NaN NaN NaN NaN NaN] ,...
            'cbar','on','nosort','on','vert',200,...
            'topo', { [chId] EEG.chanlocs EEG.chaninfo } );
    end
    
end
end